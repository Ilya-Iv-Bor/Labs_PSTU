/*
 Разработать рекурсивную функцию для подсчета количества n-разрядных двоичных чисел, не имеющих двух идущих подряд единиц. (Подсказка: Число начинается либо с нуля, либо с единицы. Если оно начинается с нуля, количество вариантов определяется оставшимися n-1 цифрами. А если с единицы, то какой должна быть следующая цифра?)
 */

#include <iostream>
using namespace std;
 
int get_count(int n, int prev = 0) {
    if(n != 0)
        return prev ? get_count(n - 1, 0) : get_count(n - 1, 0) + get_count(n - 1, 1);
    else
        return 1;
}
 
int main() {
    setlocale(LC_ALL, "ru");
    cout << "Количесвто вариантов при 2-разрядных двоичных чисел: "<< get_count(2) << endl;
    cout << "Количесвто вариантов при 3-разрядных двоичных чисел: "<< get_count(3) << endl;
    cout << "Количесвто вариантов при 4-разрядных двоичных чисел: "<< get_count(4) << endl;
    cout << "Количесвто вариантов при 5-разрядных двоичных чисел: "<< get_count(5) << endl;
}
